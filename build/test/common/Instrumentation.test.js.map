{"version":3,"file":"Instrumentation.test.js","sourceRoot":"","sources":["../../../test/common/Instrumentation.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport {\n  Instrumentation,\n  InstrumentationBase,\n  InstrumentationConfig,\n} from '../../src';\n\nimport { MeterProvider } from '@opentelemetry/sdk-metrics';\n\ninterface TestInstrumentationConfig extends InstrumentationConfig {\n  isActive?: boolean;\n}\n\nclass TestInstrumentation extends InstrumentationBase {\n  constructor(config: TestInstrumentationConfig & InstrumentationConfig = {}) {\n    super('test', '1.0.0', Object.assign({}, config));\n  }\n  override enable() {}\n  override disable() {}\n  init() {}\n}\n\ndescribe('BaseInstrumentation', () => {\n  let instrumentation: Instrumentation;\n  beforeEach(() => {\n    instrumentation = new TestInstrumentation();\n  });\n\n  it('should create an instance', () => {\n    assert.ok(instrumentation instanceof InstrumentationBase);\n  });\n\n  it('should have a name', () => {\n    assert.deepStrictEqual(instrumentation.instrumentationName, 'test');\n  });\n\n  it('should have a version', () => {\n    assert.deepStrictEqual(instrumentation.instrumentationVersion, '1.0.0');\n  });\n\n  describe('constructor', () => {\n    it('should enable instrumentation by default', () => {\n      let enableCalled = false;\n      let updateMetricInstrumentsCalled = false;\n      class TestInstrumentation2 extends TestInstrumentation {\n        override enable() {\n          enableCalled = true;\n        }\n        override _updateMetricInstruments() {\n          updateMetricInstrumentsCalled = true;\n        }\n      }\n      instrumentation = new TestInstrumentation2();\n      assert.strictEqual(enableCalled, true);\n      assert.strictEqual(updateMetricInstrumentsCalled, true);\n    });\n  });\n\n  describe('setMeterProvider', () => {\n    let otelTestingMeterProvider: MeterProvider;\n    beforeEach(() => {\n      otelTestingMeterProvider = new MeterProvider();\n    });\n    it('should call _updateMetricInstruments', () => {\n      let called = true;\n      class TestInstrumentation2 extends TestInstrumentation {\n        override _updateMetricInstruments() {\n          called = true;\n        }\n      }\n      instrumentation = new TestInstrumentation2();\n      instrumentation.setMeterProvider(otelTestingMeterProvider);\n      assert.strictEqual(called, true);\n    });\n  });\n\n  describe('getConfig', () => {\n    it('should return instrumentation config', () => {\n      const instrumentation: Instrumentation = new TestInstrumentation({\n        isActive: false,\n      });\n      const configuration =\n        instrumentation.getConfig() as TestInstrumentationConfig;\n      assert.notStrictEqual(configuration, null);\n      assert.strictEqual(configuration.isActive, false);\n    });\n  });\n\n  describe('setConfig', () => {\n    it('should set a new config for instrumentation', () => {\n      const instrumentation: Instrumentation = new TestInstrumentation();\n      const config: TestInstrumentationConfig = {\n        isActive: true,\n      };\n      instrumentation.setConfig(config);\n      const configuration =\n        instrumentation.getConfig() as TestInstrumentationConfig;\n      assert.strictEqual(configuration.isActive, true);\n    });\n  });\n});\n"]}